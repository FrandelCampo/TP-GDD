USE GD2C2023;
GO

--drop fks
--...
--drop tables
IF OBJECT_ID ('PIE_DERECHO.BI_RANGO_ETARIO', 'U') IS NOT NULL
		DROP TABLE PIE_DERECHO.BI_RANGO_ETARIO
GO
IF OBJECT_ID('PIE_DERECHO.BI_HECHOS_ANUNCIOS', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_HECHOS_ANUNCIOS
GO

IF OBJECT_ID('PIE_DERECHO.BI_TIEMPO', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_TIEMPO
GO

IF OBJECT_ID('PIE_DERECHO.BI_TIPO_INMUEBLE', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_TIPO_INMUEBLE
GO

IF OBJECT_ID('PIE_DERECHO.BI_AMBIENTES', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_AMBIENTES
GO

IF OBJECT_ID('PIE_DERECHO.BI_RANGO_METROS', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_RANGO_METROS
GO

IF OBJECT_ID('PIE_DERECHO.BI_TIPO_OPERACION', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_TIPO_OPERACION
GO

IF OBJECT_ID('PIE_DERECHO.BI_TIPO_MONEDA', 'U') IS NOT NULL
    DROP TABLE PIE_DERECHO.BI_TIPO_MONEDA
GO

--Drop SPs

IF OBJECT_ID('PIE_DERECHO.BI_MIGRAR_AMBIENTES', 'P') IS NOT NULL
    DROP PROCEDURE PIE_DERECHO.BI_MIGRAR_AMBIENTES
GO

IF OBJECT_ID('PIE_DERECHO.BI_MIGRAR_TIEMPO_PUBLICACION', 'P') IS NOT NULL
    DROP PROCEDURE PIE_DERECHO.BI_MIGRAR_TIEMPO_PUBLICACION
GO

IF OBJECT_ID('PIE_DERECHO.BI_MIGRAR_MONEDAS', 'P') IS NOT NULL
    DROP PROCEDURE PIE_DERECHO.BI_MIGRAR_MONEDAS
GO

IF OBJECT_ID('PIE_DERECHO.BI_MIGRAR_TIPO_OPERACION', 'P') IS NOT NULL
    DROP PROCEDURE PIE_DERECHO.BI_MIGRAR_TIPO_OPERACION
GO

-- Drop/creación Esquema
IF EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'PIE_DERECHO')
BEGIN
    DROP SCHEMA PIE_DERECHO;
END;

--Creacion tablas DIMENSIONES 
--TODO: Verificar que los tipos de dato coincidan
--con los de la entrega anterior
CREATE TABLE PIE_DERECHO.BI_TIEMPO(
	TIEMPO_CODIGO INT IDENTITY(1, 1) PRIMARY KEY,
	TIEMPO_ANIO INT,
	TIEMPO_CUATRIMESTRE INT,
	TIEMPO_MES INT
);
GO

CREATE TABLE PIE_DERECHO.BI_RANGO_ETARIO(
	RANGO_ETARIO_CODIGO INT IDENTITY(1, 1) PRIMARY KEY,
	RANGO_ETARIO_DESCRIPCION nvarchar(50)
);
GO

CREATE TABLE PIE_DERECHO.BI_TIPO_INMUEBLE(
	TIPO_INMUEBLE_CODIGO INT IDENTITY PRIMARY KEY,
	TIPO_INMUEBLE nvarchar(45)
);
GO

CREATE TABLE PIE_DERECHO.BI_AMBIENTES(
	AMBIENTES_CODIGO INT IDENTITY(1,1) PRIMARY KEY,
	AMBIENTES_CANTIDAD nvarchar(100)
);
GO

CREATE TABLE PIE_DERECHO.BI_RANGO_METROS(
	RANGO_METROS INT IDENTITY(1, 1) PRIMARY KEY,
	RANGO_METROS_DESCRIPCION nvarchar(50)
);
GO

CREATE TABLE PIE_DERECHO.BI_TIPO_OPERACION(
	TIPO_OPERACION_CODIGO INT IDENTITY PRIMARY KEY,
	TIPO_OPERACION_DESCRIPCION nvarchar(100)
);
GO

CREATE TABLE PIE_DERECHO.BI_TIPO_MONEDA(
	TIPO_MONEDA_CODIGO INT IDENTITY PRIMARY KEY,
	TIPO_MONEDA nvarchar(100)
);
GO

CREATE TABLE PIE_DERECHO.BI_SUCURSAL(
	SUCURSAL_CODIGO INT IDENTITY PRIMARY KEY,
	SUCURSAL_NOMBRE nvarchar(100)
);
GO

CREATE TABLE PIE_DERECHO.BI_PROVINCIA(
	PROVINCIA_CODIGO INT IDENTITY PRIMARY KEY,
	PROVINCIA_NOMBRE nvarchar(100)
);
GO


CREATE TABLE PIE_DERECHO.BI_BARRIO(
	BARRIO_CODIGO INT IDENTITY PRIMARY KEY,
	BARRIO_NOMBRE nvarchar(100)
);
GO

CREATE TABLE PIE_DERECHO.BI_LOCALIDAD(
	LOCALIDAD_CODIGO INT IDENTITY PRIMARY KEY,
	LOCALIDAD_NOMBRE nvarchar(100)
);
GO



--------------------------
--Creacion tablas hechos--
--------------------------

CREATE TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO(
	id_hechos_anuncio INT IDENTITY PRIMARY KEY,
	tiempo INT NOT NULL,
	tipo_operacion INT NOT NULL,
	barrio INT NOT NULL,
	ambientes INT NOT NULL,
	tipo_inmueble INT NOT NULL,
	rango_metros INT NOT NULL,
	tipo_moneda INT NOT NULL,
	sucursal INT NOT NULL,
	rango_etario_empleado INT NOT NULL,
	anuncio_fecha_publicacion datetime,
	anuncio_fecha_finalizacion datetime,
	anuncio_precio_publicado numeric(18, 2)
);
GO

CREATE TABLE PIE_DERECHO.BI_HECHOS_ALQUILER(
	id_hechos_alquiler INT IDENTITY PRIMARY KEY,
	rango_etario_inquilino INT NOT NULL,
	tiempo INT NOT NULL,
	barrio INT NOT NULL,
	pago_alq_fecha datetime,
	pago_alq_fecha_vencimiento datetime,
	pago_alq_importe numeric(18, 2),
	alq_comision numeric(18, 2)
);
GO

CREATE TABLE PIE_DERECHO.BI_HECHOS_VENTA(
	id_hechos_venta INT IDENTITY PRIMARY KEY,
	tiempo INT NOT NULL,
	tipo_inmueble INT NOT NULL,
	localidad INT NOT NULL,
	sucursal INT NOT NULL,
	venta_precio numeric(18,2),
	superficie_total numeric(18, 2),
	venta_comision numeric(18, 2)
);
GO
--TODO: ver si esta bien usar el mismo esquema de la entrega ant o uno nuevo
--agregar constraints FK de las tablas de hechos a las dimensiones
ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_TIEMPO_ID FOREIGN KEY (tiempo) REFERENCES PIE_DERECHO.BI_TIEMPO(TIEMPO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_TIPO_OPERACION_ID FOREIGN KEY (tipo_operacion) REFERENCES BI_INMUEBLE.BI_TIPO_OPERACION(TIPO_OPERACION_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_BARRIO_ID FOREIGN KEY (barrio) REFERENCES BI_INMUEBLE.BI_BARRIO(BARRIO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_AMBIENTES_ID FOREIGN KEY (ambientes) REFERENCES BI_INMUEBLE.BI_AMBIENTES(AMBIENTES_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_TIPO_INMUEBLE_ID FOREIGN KEY (tipo_inmueble) REFERENCES BI_INMUEBLE.BI_TIPO_INMUEBLE(TIPO_INMUEBLE_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_RANGO_METROS_ID FOREIGN KEY (rango_metros) REFERENCES BI_INMUEBLE.BI_RANGO_METROS(RANGO_METROS_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_TIPO_MONEDA_ID FOREIGN KEY (tipo_moneda) REFERENCES BI_INMUEBLE.BI_TIPO_MONEDA(TIPO_MONEDA_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_SUCURSAL_ID FOREIGN KEY (sucursal) REFERENCES BI_INMUEBLE.BI_SUCURSAL(SUCURSAL_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ANUNCIO ADD CONSTRAINT FK_ANUNCIO_RANGO_ETARIO_EMPLEADO_ID FOREIGN KEY (rango_etario_empleado) REFERENCES BI_INMUEBLE.BI_RANGO_ETARIO(RANGO_ETARIO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ALQUILER ADD CONSTRAINT FK_ALQUILER_RANGO_ETARIO_INQUILINO_ID FOREIGN KEY (rango_etario_inquilino) REFERENCES BI_INMUEBLE.BI_RANGO_ETARIO(RANGO_ETARIO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ALQUILER ADD CONSTRAINT FK_ALQUILER_TIEMPO_ID FOREIGN KEY (tiempo) REFERENCES BI_INMUEBLE.BI_TIEMPO(TIEMPO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_ALQUILER ADD CONSTRAINT FK_ALQUILER_BARRIO_ID FOREIGN KEY (barrio) REFERENCES BI_INMUEBLE.BI_BARRIO(BARRIO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_VENTA ADD CONSTRAINT FK_VENTA_TIEMPO_ID FOREIGN KEY (tiempo) REFERENCES BI_INMUEBLE.BI_TIEMPO(TIEMPO_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_VENTA ADD CONSTRAINT FK_VENTA_TIPO_INMUEBLE_ID FOREIGN KEY (tipo_inmueble) REFERENCES BI_INMUEBLE.BI_TIPO_INMUEBLE(TIPO_INMUEBLE_ID)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_VENTA ADD CONSTRAINT FK_VENTA_LOCALIDAD_ID FOREIGN KEY (localidad) REFERENCES BI_INMUEBLE.BI_LOCALIDAD(LOCALIDAD_CODIGO)
GO

ALTER TABLE PIE_DERECHO.BI_HECHOS_VENTA ADD CONSTRAINT FK_VENTA_SUCURSAL_ID FOREIGN KEY (sucursal) REFERENCES BI_INMUEBLE.BI_SUCURSAL(SUCURSAL_CODIGO)
GO

---------------------------
--Migraciones Dimensiones--
---------------------------
--Creo que habria que hacer otra para la fecha de finalizacion
CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_AMBIENTES
AS
BEGIN

INSERT INTO PIE_DERECHO.BI_AMBIENTES
SELECT
	AMBIENTES_CODIGO,
	AMBIENTES_CANT_INMUEBLE
FROM PIE_DERECHO.ambientes

END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_TIEMPO_PUBLICACION
AS
BEGIN
INSERT INTO BI_TIEMPO
SELECT
	YEAR(a.ANUNCIO_FECHA_PUBLICACION),
	DATEPART(Q, a.ANUNCIO_FECHA_PUBLICACION),
	DATEPART(M, a.ANUNCIO_FECHA_PUBLICACION)
FROM PIE_DERECHO.anuncios a
END
GO



CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_TIPO_MONEDA
AS
BEGIN
INSERT INTO BI_TIPO_MONEDA
SELECT
	m.MONEDA_CODIGO,
	m.MONEDA_NOMBRE
FROM PIE_DERECHO.monedas m
END
GO


CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_TIPO_OPERACION
AS
BEGIN
INSERT INTO BI_TIPO_OPERACION
SELECT
	t.TIPO_OPERACION_CODIGO,
	t.TIPO_OPERACION_ANUNCIO
FROM PIE_DERECHO.tipos_de_operacion t
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_SUCURSAL
AS
BEGIN
INSERT INTO BI_SUCURSAL
SELECT
	s.SUCURSAL_CODIGO,
	s.SUCURSAL_NOMBRE
FROM PIE_DERECHO.sucursales s
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_BARRIO
AS
BEGIN
INSERT INTO BI_BARRIO
SELECT
	b.BARRIO_CODIGO,
	b.BARRIO_INMUEBLE
FROM PIE_DERECHO.barrios b
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_LOCALIDAD
AS
BEGIN
INSERT INTO BI_LOCALIDAD
SELECT
	l.LOCALIDAD_CODIGO,
	l.LOCALIDAD_NOMBRE
FROM PIE_DERECHO.localidades l
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_PROVINCIA
AS
BEGIN
INSERT INTO BI_PROVINCIA
SELECT
	p.PROVINCIAS_CODIGO,
	p.PROVINCIA_NOMBRE
FROM PIE_DERECHO.provincias p
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_RANGO_ETARIO
AS
BEGIN
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('<25')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('25-35')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('35-50')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('>50')
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_RANGO_METROS
AS
BEGIN
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('<35')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('<35-55')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('55-75')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('75-100')
	INSERT INTO BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
		VALUES('>100')			
END
GO

CREATE PROCEDURE PIE_DERECHO.BI_MIGRAR_TIPO_INMUEBLE
AS
BEGIN
INSERT INTO PIE_DERECHO.BI_TIPO_INMUEBLE
SELECT
	ti.TIPO_INMUEBLE_CODIGO,
	ti.TIPO_INMUEBLE_INMUEBLE
FROM PIE_DERECHO.tipos_de_inmueble ti
END
GO

----------------------
--Migraciones HECHOS--
----------------------

